version: '3.8'

x-php-container: &php-container
    build: ./docker/php
    user: app
    volumes:
        - '.:/app'

services:
    app-init:
        <<: *php-container
        depends_on:
            - postgres
            - minio
        entrypoint: [ "/bin/bash", "-c" ]
        command:
            - |
                if [ ! -f .env ]; then
                  cp .env.example .env
                fi
                composer install --ignore-platform-reqs
                php artisan key:generate
                php artisan migrate

    nginx:
        image: nginx:1.23.4-alpine
        volumes:
            - '.:/app'
            - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
            - './docker/nginx/openapi.conf:/etc/nginx/conf.d/openapi.conf:ro'
            - './docker/nginx/minio.conf:/etc/nginx/conf.d/minio.conf:ro'
#            - './docker/nginx/xhprof.conf:/etc/nginx/conf.d/xhprof.conf:ro'
        ports:
            - '80:80'
            - '81:81'
            - '443:443'
        networks:
            default:
                aliases:
                    - '${APP_HOST}'
        depends_on:
            - php-fpm

    php-fpm:
        <<: *php-container
        environment:
            PHP_IDE_CONFIG: serverName=${APP_HOST}
            XDEBUG_CONFIG: >-
                client_port=9003
                client_host=172.17.0.1
                log_level=0
            XDEBUG_MODE: develop,debug,coverage,profile
            XDEBUG_TRIGGER: yes
            XDEBUG_SESSION: 1
        depends_on:
            - app-init
            - postgres


    postgres:
        image: postgres:16-alpine
        container_name: postgres
        restart: always
        environment:
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        expose:
            - '${DB_PORT}'
        ports:
            - '5432:${DB_PORT}'
        volumes:
            - 'postgres_data:/var/lib/postgresql/data'

    minio:
        image: minio/minio
        expose:
            - 9001
        ports:
            - ${MINIO_UI_PORT}:9001
        volumes:
            - './volumes/minio:/data'
        environment:
            MINIO_ROOT_USER: ${MINIO_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
        command: server --console-address ":9001" /data

    minio-init:
        image: minio/mc
        depends_on:
            - minio
        volumes:
            - './storage/app/public:/minio/public:ro'
        entrypoint: >
            /bin/sh -c "
                /usr/bin/mc config host add minio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD}
                /usr/bin/mc rb minio/public;
                /usr/bin/mc rb minio/private;
                /usr/bin/mc mb minio/public;
                /usr/bin/mc mb minio/private;
            "

    scheduler:
        <<: *php-container
        restart: always
        command:
            - sh
            - -exec
            - >-
                exec php artisan -n --ansi
                schedule:work
                > /dev/null

    worker:
        <<: *php-container
        restart: always
        command:
            - sh
            - -exec
            - exec php artisan queue:work --queue=high,medium,low,default --tries=3
        depends_on:
          - redis

    redis:
        image: redis:alpine
        restart: always
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        expose:
            - 6379
        ports:
             - '6379:6379'
        volumes:
            - './volumes/redis:/data'

volumes:
    postgres_data: